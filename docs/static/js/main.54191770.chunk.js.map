{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","defaultCategories","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAkBhD,OACI,oCACI,0BAAMC,SAZO,SAACC,GAElBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAOP,GAAP,mBAAsBO,OACzCN,EAAc,OAOV,2BACIO,KAAK,OACLC,MAAQT,EACRU,SApBU,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,uBCRnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCGPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEjC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,uBAAGI,UAAU,aAAcJ,KCF1BO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAAEpB,IAEEqB,EDd2BK,CAAc1B,GAAnCa,EAFwB,EAE7BN,KAAca,EAFe,EAEfA,QAEtB,OACI,oCACI,wBAAIJ,UAAU,qCAAsChB,GAElDoB,GAAW,uBAAGJ,UAAU,oCAAb,cAEb,yBAAKA,UAAU,aAEPH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eAAaiB,IAAMjB,EAAIC,IAAUD,UEf5CkB,EAAe,SAAC,GAAgC,IAAD,IAA7BC,yBAA6B,MAAT,GAAS,IAEpB3C,mBAAU2C,GAFU,mBAEjDC,EAFiD,KAErC7C,EAFqC,KAIxD,OACI,yBAAK+B,UAAU,gBACX,wBAAIA,UAAU,wCAAd,gBACA,kBAAC,EAAD,CAAa/B,cAAgBA,IAC7B,6BAEA,4BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI2B,IAAM3B,EACNA,SAAWA,U,MCZvC+B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.54191770.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value )\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        \r\n        e.preventDefault()\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( cats  => [ inputValue, ...cats ] )\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={ handleSubmit }>\r\n                <input\r\n                    type='text'\r\n                    value={ inputValue }\r\n                    onChange={ handleInputChange }\r\n                />\r\n            </form>  \r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async( category ) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=12&api_key=DHfuwGESEBcA5iHrwi5FMIeQMQZ5Gm1R`\r\n    const resp = await fetch( url )\r\n    const { data } = await resp.json()\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const GifGridItem = ({ title, url}) => {\r\n    \r\n    return (\r\n        <div className='card animate__animated animate__fadeIn' >\r\n            <img src={ url } alt={ title } />\r\n            <p className=\"w3-center\">{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images , loading } = useFetchGifs( category ) \r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeIn'>{ category }</h3>\r\n            \r\n            { loading && <p className='animate__animated animate__flash'>Loading...</p> }\r\n\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem key={ img.id } { ...img } />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n    \r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })  \r\n\r\n            })\r\n    }, [ category ])\r\n\r\n    return state // { data: [], loading: true }\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = ({ defaultCategories = [] }) => {\r\n\r\n    const [categories, setCategories] = useState( defaultCategories )\r\n\r\n    return (\r\n        <div className=\"w3-container\" >\r\n            <h2 className=\"w3-panel w3-pale-blue w3-round-large\">GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => ( \r\n                        <GifGrid\r\n                            key={ category }\r\n                            category={ category } \r\n                        /> \r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}